// Mocks generated by Mockito 5.4.4 from annotations
// in gitgram/test/unit_test/cubits/auth_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/material.dart' as _i6;
import 'package:flutter/material.dart';
import 'package:gitgram/data/data_sources/local_storage/local_storage.dart'
    as _i7;
import 'package:github_oauth/src/github_sign_in.dart' as _i3;
import 'package:github_oauth/src/github_sign_in_result.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/mockito.dart';
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGitHubSignInResult_0 extends _i1.SmartFake
    implements _i2.GitHubSignInResult {
  _FakeGitHubSignInResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GitHubSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGitHubSignIn extends _i1.Mock implements _i3.GitHubSignIn {
  @override
  String get clientId => (super.noSuchMethod(
        Invocation.getter(#clientId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#clientId),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#clientId),
        ),
      ) as String);

  @override
  String get clientSecret => (super.noSuchMethod(
        Invocation.getter(#clientSecret),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#clientSecret),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#clientSecret),
        ),
      ) as String);

  @override
  String get redirectUrl => (super.noSuchMethod(
        Invocation.getter(#redirectUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#redirectUrl),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#redirectUrl),
        ),
      ) as String);

  @override
  String get scope => (super.noSuchMethod(
        Invocation.getter(#scope),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#scope),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#scope),
        ),
      ) as String);

  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);

  @override
  bool get allowSignUp => (super.noSuchMethod(
        Invocation.getter(#allowSignUp),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get clearCache => (super.noSuchMethod(
        Invocation.getter(#clearCache),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<_i2.GitHubSignInResult> signIn(_i6.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [context],
        ),
        returnValue:
            _i5.Future<_i2.GitHubSignInResult>.value(_FakeGitHubSignInResult_0(
          this,
          Invocation.method(
            #signIn,
            [context],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.GitHubSignInResult>.value(_FakeGitHubSignInResult_0(
          this,
          Invocation.method(
            #signIn,
            [context],
          ),
        )),
      ) as _i5.Future<_i2.GitHubSignInResult>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i1.Mock implements _i7.LocalStorage {
  @override
  _i5.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  _i5.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
